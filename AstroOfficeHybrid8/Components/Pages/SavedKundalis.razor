@page "/saved-kundalis"
@using AstroOfficeWeb.Services
@using AstroOfficeWeb.Shared.ViewModels

@* @inject IJSRuntime JSRuntime *@
@inject NavigationManager NavigationManager
@inject KundaliHistroyService KundaliHistroy
@inject ISnackbar Snackbar

@using AstroOfficeHybrid8.Components.Layout;

@* <MudContainer Class="content mt-3">


    <MudContainerFluid>
        <MudRow>
            <MudCol Size="12">

                <div class="overlay-wrapper">
                    @if (personKundaliTableTRs == null)
                    {
                        <div class="overlay dark">
                            <i class="fas fa-2x fa-sync fa-spin"></i>
                        </div>
                    }
                    else
                    {
                        @if (personKundaliTableTRs.Any())
                        {
                            @foreach (var row in personKundaliTableTRs)
                            {
                                <MudCard Class="mt-3">

                                    <MudRow>

                                        <MudCol Size="2" Class="d-flex align-items-center position-relative">
                                            <div class="image">
                                                <MudImage Src="@AstroShared.Helper.AvatarGenerator.GenerateUserAvatar(row.Name)" Class="img-circle" Alt="User Image" Height="45" Width="45" />

                                            </div>
                                            <MudLink Class="stretched-link" OnClick="()=>OnClick_BtnShow(row)"></MudLink>
                                        </MudCol>

                                        <MudCol Size="8" Class="position-relative">
                                            <MudRow>
                                                <div class="info">
                                                    <MudLink Class="d-block active">@row.Name</MudLink>
                                                    </div>
                                                </MudRow>
                                                <MudRow>
                                                    <h6 style="color: #888; font-size: 14px;">@row.DateOfBirth.ToString("dd MMM yyyy"), @row.TimeOfBirth.ToString("c") <br />@row.PlaceOfBirth</h6>
                                            </MudRow>
                                            <MudLink Class="stretched-link" OnClick="()=>OnClick_BtnShow(row)"></MudLink>
                                        </MudCol>

                                        <MudCol Size="2">
                                            <MudRow>
                                                <MudCol>
                                                    <MudButton OnClick="()=>OnClick_EditBtnShow(row)" Variant="Variant.Outlined" Size="Size.Small">
                                                        <i class="fas fa-edit"></i>
                                                    </MudButton>
                                                </MudCol>

                                                <MudCol>
                                                    <MudButton OnClick="()=>OnClick_BtnDelete(row)" Variant="Variant.Outlined" Size="Size.Small">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </MudButton>
                                                </MudCol>
                                            </MudRow>
                                        </MudCol>

                                    </MudRow>
                                </MudCard>

                            }
                        }
                    }
                </div>
            </MudCol>
        </MudRow>
    </MudContainerFluid>
</MudContainer>
 *@


<MudContainer Class="content">
    @if (personKundaliTableTRs == null)
    {
        <div class="overlay dark">
            <i class="fas fa-2x fa-sync fa-spin"></i>
        </div>
    }
    else
    {
        @if (personKundaliTableTRs.Any())
        {
            @foreach (var row in personKundaliTableTRs)
            {
                <MudCard Class="mt-3 " Style="background-color: rgba(245, 234, 234, 1)" Elevation="8">
                    <MudCardHeader Class="py-0">
                        <CardHeaderAvatar>
                            <MudAvatar Color="Color.Secondary">@(!string.IsNullOrEmpty(row.Name) ? row.Name.ToUpper()[0] : 'U')</MudAvatar>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">
                                @row.Name
                            </MudText>
                            <MudText Typo="Typo.subtitle1">
                                @row.DateOfBirth
                            </MudText>
                            <MudText Typo="Typo.subtitle1">
                                @row.PlaceOfBirth
                            </MudText>
                        </CardHeaderContent>

                        <CardHeaderActions>
                            <div class="mt-6">
                                <MudIconButton Class="py-3" OnClick="()=>OnClick_EditBtnShow(row)" Icon="@Icons.Material.Filled.Edit" Color="Color.Default" />
                                <MudIconButton Class="py-3" OnClick="()=>OnClick_BtnDelete(row)" Icon="@Icons.Material.Filled.Delete" Color="Color.Error" />
                            </div>
                        </CardHeaderActions>
                    </MudCardHeader>
                </MudCard>
            }

        }

        else
        {
            <div colspan="10" class="text-center">
                <h3>No records found.</h3>
            </div>
        }
    }


</MudContainer>


@code {

    // [CascadingParameter]
    // private MainLayout MainLayout { get; set; }

    private List<PersonKundaliTableTRModel> personKundaliTableTRs;
    private PersonKundaliTableTRModel selectedPersonKundaliTableTR;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // MainLayout.NavTitle = "Saved Kundalis";
    }

    protected override async Task OnInitializedAsync()
    {
        // await MainLayout.NotifyChangeAsync();
        personKundaliTableTRs = await KundaliHistroy.GetUserSavedKundalies();

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // await JSRuntime.CloseSidebar();
        }
    }

    private void OnClick_BtnShow(PersonKundaliTableTRModel selectedRow)
    {
        KundaliHistroy.SetSelectedSavedKundali(selectedRow.SrNo - 1);

        NavigationManager.NavigateTo("/kundali");
    }

    private void OnClick_EditBtnShow(PersonKundaliTableTRModel selectedRow)
    {
        KundaliHistroy.SetSelectedSavedKundali(selectedRow.SrNo - 1);
        NavigationManager.NavigateTo("/dashboard");
    }

    private async Task OnClick_BtnDelete(PersonKundaliTableTRModel selectedRow)
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;
        bool confirm = await Application.Current.MainPage.DisplayAlert("Confirmation ?", "Are you sure you want to delete this Kundali?", "Yes", "No");
        if (confirm)
        {
            selectedPersonKundaliTableTR = selectedRow;

            await InvokeAsync(async () =>
        {
            if (await KundaliHistroy.IsDeletedSavedKundali(selectedPersonKundaliTableTR!.ID))
            {
                personKundaliTableTRs?.Remove(selectedPersonKundaliTableTR);
                Snackbar.Add("Kundali has been deleted successfully.", Severity.Success);
                StateHasChanged(); // Trigger UI update
            }
        });
        }
        else
        {
            return;
        }

    }

}
