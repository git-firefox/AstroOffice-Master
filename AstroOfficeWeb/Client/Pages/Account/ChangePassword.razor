@page "/changePassword"
@page "/changePassword/{MobileNumber}/{Otp}"
@using AstroOfficeWeb.Shared.Models;
@using AstroOfficeWeb.Shared;
@using AstroOfficeWeb.Shared.ViewModels

@inject ISwaggerApiService Swagger
@inject NavigationManager NavigationManager

<div class="hold-transition login-page">
    <img src="images/loader-4.gif" class="astroOffice-logo-image mb-3" />
    <div class="login-box  card-frame">
        <div style="position:relative;z-index:999!important;">
            <div class="login-logo">
                <h3>Change Password</h3>
            </div>
            <!-- /.login-logo -->
            <div class="card">
                <div class="card-body login-card-body">
                    <p class="login-box-msg">You are only one step away from your new password. Recover your password now.</p>

                    <EditForm Model="changePasswordModel" OnValidSubmit="OnValidSubmit_ChangePassword">
                        <div>
                            <DataAnnotationsValidator />
                            <div class="input-group mb-3">
                                <InputText type="@(PasswordIsClicked ? "text" : "password")" @bind-Value="changePasswordModel.Password" class="form-control" placeholder="Password" />
                                <i class="fas @(PasswordIsClicked ? "fa-eye-slash" : "fa-eye")" @onclick="()=>{PasswordIsClicked = !PasswordIsClicked; }"></i>
                                <ValidationMessage For="@(() => changePasswordModel.Password)" />

                            </div>

                            <div class="input-group mb-3">
                                <InputText type="@(ConfirmPasswordIsClicked ? "text" : "password")" @bind-Value="changePasswordModel.ConfirmPassword" class="form-control" placeholder="Confirm Password" />
                                <i class="fas @(ConfirmPasswordIsClicked ? "fa-eye-slash" : "fa-eye")" @onclick="()=>{ConfirmPasswordIsClicked = !ConfirmPasswordIsClicked; }"></i>
                                <ValidationMessage For="@(() => changePasswordModel.ConfirmPassword)" />

                            </div>

                            @*   <div class="row">
                            <div class="col-12 mt-3">
                            @if (!ArePasswordsMatching)
                            {
                            <div class="alert alert-danger" role="alert">Passwords do not match. Please make sure they match.</div>
                            }
                            </div>
                            </div> *@

                            <div class="row down-form">
                                <div class="col-12 mt-3">
                                    <button type="submit" class="btn btn-custom btn-block">Change password</button>
                                </div>
                                @* <div class="col-12 mt-2">
                                <button class="btn btn-custom btn-custom-outline btn-block">
                                <a href="/login">Login</a>
                                </button>
                                </div>*@

                            </div>
                        </div>
                    </EditForm>
                    <div class="row down-form">
                        <div class="col-12 mt-2">
                            <a class="btn btn-custom btn-custom-outline btn-block" href="/login">Login</a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
@code {

    [Parameter] public string? MobileNumber { get; set; }
    [Parameter] public string? Otp { get; set; }

    private bool PasswordIsClicked { get; set; } = false;
    private bool ConfirmPasswordIsClicked { get; set; } = false;

    private ChangePasswordModel changePasswordModel = new ChangePasswordModel();

    private async Task OnValidSubmit_ChangePassword()
    {
        var request = new UpdateUserPasswordByOtpRequest
            {
                MobileNumber = MobileNumber,
                NewPassword = changePasswordModel.Password,
                Otp = Otp
            };

        var response = await Swagger!.PutAsync<UpdateUserPasswordByOtpRequest, ApiResponse<string>>(AccountApiConst.PUT_UpdateUserPasswordByOtp, request);

        if (response!.Success)
        {
            NavigationManager.NavigateTo("/login");
        }
    }
}
