@page "/users"
@using System.ComponentModel.DataAnnotations

<MudDrawer @bind-Open="IsDrawerOpen" Width="400px" Height="100%" Anchor="Anchor.End" Elevation="1" Variant="DrawerVariant.Temporary">
    <MudDrawerHeader>
        <MudPaper>
            <MudStack Justify="Justify.SpaceBetween" Row="true">
                <MudText Typo="Typo.h6">Add New User</MudText>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" />
            </MudStack>
        </MudPaper>
    </MudDrawerHeader>
    <MudDrawerContainer>
        <MudGrid>
            <MudItem xs="12">
                <MudPaper Class="pa-4">
                    <MudForm @ref="form" @bind-IsValid="@IsSaveUserFormValid" @bind-Errors="@errors">
                        <MudTextField T="string" Label="Username" Required="true" RequiredError="User name is required!" />
                        <MudTextField T="string" Label="Email" Required="true" RequiredError="Email is required!"
                                      Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />
                        <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="pwField1"
                                      InputType="InputType.Password"
                                      Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                      RequiredError="Password is required!" />
                        <MudTextField T="string"
                                      Label="Password" HelperText="Repeat the password" InputType="InputType.Password"
                                      Validation="@(new Func<string, string?>(PasswordMatch))" />
                        <div class="d-flex">
                            <MudRadioGroup T="string" Required="true" RequiredError="Account type is required!">
                                <MudRadio Value="@("Personal")">Personal</MudRadio>
                                <MudRadio Value="@("Professional")">Professional</MudRadio>
                            </MudRadioGroup>
                        </div>
                        <div class="d-flex align-center justify-space-between">
                            <MudCheckBox T="bool" Required="true" RequiredError="You must agree" Label="I agree!" />
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!IsSaveUserFormValid)" Class="ml-auto">Register</MudButton>
                        </div>
                    </MudForm>
                </MudPaper>
                @* <MudPaper Class="pa-4 mt-4">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>form.Validate())">Validate</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.ResetAsync())" Class="mx-2">Reset</MudButton>
                <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick="@(()=>form.ResetValidation())">Reset Validation</MudButton>
                </MudPaper> *@
            </MudItem>
        </MudGrid>

    </MudDrawerContainer>
</MudDrawer>
<MudButton Variant="Variant.Text" OnClick="@(() => OpenDrawer(Anchor.End))">End</MudButton>
