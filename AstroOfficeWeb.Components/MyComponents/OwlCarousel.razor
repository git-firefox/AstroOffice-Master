@inject IJSRuntime JSRuntime

<div @ref="Element" class="owl-carousel owl-theme">
    @foreach (var item in Items)
    {
        <div class="item">
            <img src="https://www.astromantra.com/wp-content/uploads/2022/03/IMG_3212-555x555.jpg" alt="@item.MediaName" title="@item.MediaName" />
        </div>
        <div class="item">
            <img src="https://www.astromantra.com/wp-content/uploads/2019/02/Crystal-Laughing-Ganesha-ASTROMANTRA.jpg" alt="@item.MediaName" title="@item.MediaName" />
        </div>
        <div class="item">
            <img src="https://www.astromantra.com/wp-content/uploads/2019/02/Crystal-Laughing-Ganesha-AMI.jpg" alt="@item.MediaName" title="@item.MediaName" />
        </div>
        <div class="item">
            <img src="https://www.astromantra.com/wp-content/uploads/2023/08/Astro-Mantra-Pouch.jpg" alt="@item.MediaName" title="@item.MediaName" />
        </div>

        <div class="item">
            <img src="https://picsum.photos/200/300" alt="@item.MediaName" title="@item.MediaName" />
        </div>

        <div class="item-video">
            <video poster="https://i.ytimg.com/vi/0qLznUUeNc4/maxresdefault.jpg">
                <source src="https://media.w3.org/2010/05/sintel/trailer.mp4" type='video/mp4'>
                <source src="https://media.w3.org/2010/05/sintel/trailer.webm" type='video/webm'>
                <source src="https://media.w3.org/2010/05/sintel/trailer.ogv" type='video/ogg'>
            </video>
        </div>

    }
</div>

@code {
    [Parameter]
    public IEnumerable<MediaFileDTO> Items { get; set; } = null!;

    private ElementReference Element { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("fnOwlCarouselInterop", Element, DotNetObjectReference.Create(this));
        }
    }
}