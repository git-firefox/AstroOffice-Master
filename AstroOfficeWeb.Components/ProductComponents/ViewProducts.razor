@inject ISnackbarService Snackbar
@inject NavigationManager NavigationManager
@inject ProductService ProductService

<div class="row">
    <div class="col-3 d-none d-md-block">
        <ViewCategories OnCategorySelected="OnCategorySelected" />
    </div>

    <div class="col">
        <div class="row">
            <div class="col">
                <ProductFilter OnFilterReset="OnFilterReset" OnFilterChanged="OnFilterChanged" />
            </div>
        </div>

        <div class="row mt-2 row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
            @if (FilteredProducts == null)
            {
                for (int i = 0; i < 10; i++)
                {
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="110px" />
                                <MudSkeleton Width="30%" Height="40px" />
                                <MudSkeleton Width="30%" Height="40px;" />
                                <MudSkeleton Width="30%" Height="50px;" />
                            </div>
                        </div>
                    </div>
                }
            }
            else if (VisiableProducts.Any())
            {
                foreach (ViewProductDTO product in VisiableProducts)
                {

                    <div class="col">
                        <div class="card product-card h-100">
                            <div class="product-img-top">
                                <img class="card-img-top primary-img" @onclick="() => OnClick_ALinkView(product)" src="@product.ImageUrl" alt="@product.Name" title="@product.Name" />
                                <img class="card-img-top secondary-img " @onclick="() => OnClick_ALinkView(product)" src="https://www.astromantra.com/wp-content/uploads/2022/03/IMG_3212-555x555.jpg" alt="...">
                                <div class="btn-group-vertical btn-group-sm product-buttons" role="group" aria-label="Vertical button group">
                                    <button type="button" @onclick="() => OnClick_ALinkView(product)" class="btn btn-primary">
                                        <MudIcon Icon="@Icons.Material.Filled.Search" Title="View to Product" />
                                    </button>
                                    <button type="button" @onclick="() => OnClick_BtnAddToWishlist(product)" class="btn btn-primary">
                                        <MudIcon Icon="@Icons.Material.Filled.Favorite" Title="Add to whishlist" />
                                    </button>
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title text-truncate">Card title</h5>
                                <p class="card-text">&#8377; @product.Price.ToString("N2")</p>

                                <div class="d-grid gap-2 d-md-flex justify-content-md-between">
                                    <MudButton Class="w-100" OnClick="() => OnClick_BtnAddToCart(product)" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.AddShoppingCart" ButtonType="ButtonType.Button" Color="Color.Primary" Size="Size.Small">Add To Cart</MudButton>
                                    <MudButton Class="d-sm-flex d-md-none w-100" OnClick="() => OnClick_BtnAddToWishlist(product)" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Favorite" ButtonType="ButtonType.Button" Color="Color.Secondary" aria-label="add to favorite" Size="Size.Small">Add To Wishlist</MudButton>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <div class="row">
            <div class="col-12 d-flex flex-column align-center">
                <MudPagination SelectedChanged="PageChanged" BoundaryCount="1" MiddleCount="1" Count="TotalPages" />
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public EventCallback<bool> EventCallback { get; set; }

    [Parameter]
    public string? CategorySno { get; set; } = null;
    [Parameter]
    public string? CategoryName { get; set; } = null;

    [Parameter]
    public int CurrentPage { get; set; } = 1;
}