@inject IJSRuntime JSRuntime
@inherits InputBase<string>
<div @ref="ER_TextArea"> @(new MarkupString(CurrentValueAsString ?? "")) </div>

@code {
    [Parameter]
    public int Height { get; set; } = 400;

    private ElementReference ER_TextArea { get; set; }

    protected override bool TryParseValueFromString(string? value, out string result, out string validationErrorMessage)
    {
        result = value ?? string.Empty;
        validationErrorMessage = string.Empty;
        return true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("fnSummernoteInterop", ER_TextArea, Height, DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public async Task OnInputSummernoteTextChange(object value)
    {
        // CurrentValue = value.ToString();
        await ValueChanged.InvokeAsync(value.ToStringX());
        StateHasChanged();
    }
}
